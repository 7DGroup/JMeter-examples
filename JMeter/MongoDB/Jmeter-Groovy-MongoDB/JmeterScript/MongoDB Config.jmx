<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="4.0" jmeter="4.0 r1823414">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <UserParameters guiclass="UserParametersGui" testclass="UserParameters" testname="MongoDB数据源配置信息" enabled="true">
        <collectionProp name="UserParameters.names">
          <stringProp name="-1411166345">DB_USERNAME</stringProp>
          <stringProp name="71532860">DB_PASSWORD</stringProp>
          <stringProp name="1254463151">DB_SERVERS</stringProp>
          <stringProp name="644012060">DB_DATABASE</stringProp>
        </collectionProp>
        <collectionProp name="UserParameters.thread_values">
          <collectionProp name="738206291">
            <stringProp name="3556498">test</stringProp>
            <stringProp name="1450575459">123456</stringProp>
            <stringProp name="-1113175628">127.0.0.1:27017</stringProp>
            <stringProp name="3556498">test</stringProp>
          </collectionProp>
        </collectionProp>
        <boolProp name="UserParameters.per_iteration">false</boolProp>
      </UserParameters>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="获取总数" enabled="false">
          <stringProp name="scriptLanguage">groovy</stringProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="cacheKey">true</stringProp>
          <stringProp name="script">import com.mongodb.MongoClient;
import com.mongodb.MongoClientURI;
import com.mongodb.client.MongoCollection;
import com.mongodb.client.MongoDatabase;
import org.bson.Document;

//建立连接
String DB_USERNAME = vars.get(&quot;DB_USERNAME&quot;);
String DB_PASSWORD = vars.get(&quot;DB_PASSWORD&quot;);
String DB_SERVERS = vars.get(&quot;DB_SERVERS&quot;);
String DB_DATABASE = vars.get(&quot;DB_DATABASE&quot;);
//连接服务
MongoClientURI uri = new MongoClientURI(&quot;mongodb://&quot;+DB_USERNAME+&quot;:&quot;+DB_PASSWORD+&quot;@&quot;+DB_SERVERS+&quot;/?authSource=&quot;+DB_DATABASE+&quot;&amp;authMechanism=SCRAM-SHA-1&quot;);
MongoClient client = new MongoClient(uri);
//连接数据库
MongoDatabase db = client.getDatabase(&quot;test&quot;);
//连接集合
MongoCollection&lt;Document&gt; collection = db.getCollection(&quot;zips&quot;);

//获取集合总数
long count = collection.countDocuments();
//count转换字符串打印
String result = String.valueOf(count);
//返回Jmeter
SampleResult.setResponseData(result.getBytes());

</stringProp>
        </JSR223Sampler>
        <hashTree/>
        <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="插入" enabled="false">
          <stringProp name="scriptLanguage">groovy</stringProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="cacheKey">true</stringProp>
          <stringProp name="script">import com.mongodb.BasicDBList;
import com.mongodb.MongoClient;
import com.mongodb.MongoClientURI;
import com.mongodb.client.MongoCollection;
import com.mongodb.client.MongoDatabase;
import org.bson.Document;
 		
//建立连接
String DB_USERNAME = vars.get(&quot;DB_USERNAME&quot;);
String DB_PASSWORD = vars.get(&quot;DB_PASSWORD&quot;);
String DB_SERVERS = vars.get(&quot;DB_SERVERS&quot;);
String DB_DATABASE = vars.get(&quot;DB_DATABASE&quot;);
//连接服务
MongoClientURI uri = new MongoClientURI(&quot;mongodb://&quot;+DB_USERNAME+&quot;:&quot;+DB_PASSWORD+&quot;@&quot;+DB_SERVERS+&quot;/?authSource=&quot;+DB_DATABASE+&quot;&amp;authMechanism=SCRAM-SHA-1&quot;);
MongoClient client = new MongoClient(uri);
//连接数据库
MongoDatabase db = client.getDatabase(&quot;test&quot;);
//连接集合
MongoCollection&lt;Document&gt; collection = db.getCollection(&quot;zips&quot;);

//创建空文档
Document object = new Document();
//创建包含经纬度的数组
BasicDBList location = new BasicDBList();
location.add(32.211100D);
location.add(44.251500D);
//保存到文档中
object.append(&quot;city&quot;,&quot;Beijing&quot;);
object.append(&quot;loc&quot;,location);
object.append(&quot;pop&quot;,300000);
object.append(&quot;state&quot;,&quot;IS&quot;);
//插入单条文档
collection.insertOne(object);

//获取集合总数
long count = collection.countDocuments();
//count转换字符串打印
String result = String.valueOf(count);
//返回Jmeter
SampleResult.setResponseData(result.getBytes());
</stringProp>
        </JSR223Sampler>
        <hashTree/>
        <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="查询" enabled="false">
          <stringProp name="scriptLanguage">groovy</stringProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="cacheKey">true</stringProp>
          <stringProp name="script">import com.mongodb.BasicDBObject;
import com.mongodb.MongoClient;
import com.mongodb.MongoClientURI;
import com.mongodb.client.FindIterable;
import com.mongodb.client.MongoCollection;
import com.mongodb.client.MongoCursor;
import com.mongodb.client.MongoDatabase;
import org.bson.Document;

//建立连接
String DB_USERNAME = vars.get(&quot;DB_USERNAME&quot;);
String DB_PASSWORD = vars.get(&quot;DB_PASSWORD&quot;);
String DB_SERVERS = vars.get(&quot;DB_SERVERS&quot;);
String DB_DATABASE = vars.get(&quot;DB_DATABASE&quot;);
//连接服务
MongoClientURI uri = new MongoClientURI(&quot;mongodb://&quot;+DB_USERNAME+&quot;:&quot;+DB_PASSWORD+&quot;@&quot;+DB_SERVERS+&quot;/?authSource=&quot;+DB_DATABASE+&quot;&amp;authMechanism=SCRAM-SHA-1&quot;);
MongoClient client = new MongoClient(uri);
//连接数据库
MongoDatabase db = client.getDatabase(&quot;test&quot;);
//连接集合
MongoCollection&lt;Document&gt; collection = db.getCollection(&quot;zips&quot;);

//创建文档
BasicDBObject query = new BasicDBObject(&quot;city&quot;, &quot;BABYLON&quot;);
//检索所有符合文件的所有文档
/**
* 1.按条件获取迭代器
* 2.获取到游标
* 3.通过游标遍历检索出文档集合
*/
FindIterable&lt;Document&gt; findIterable = collection.find(query);
MongoCursor&lt;Document&gt; mongoCursor = findIterable.iterator();
StringBuilder resultBuilder = new StringBuilder(); 
while (mongoCursor.hasNext()){
	//获得文档
	Document result = mongoCursor.next(); 
	//保存到resultBuilder
 	resultBuilder.append(result.toString());
}

SampleResult.setResponseData(resultBuilder.toString().getBytes()); 

</stringProp>
        </JSR223Sampler>
        <hashTree/>
        <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="修改" enabled="true">
          <stringProp name="scriptLanguage">groovy</stringProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="cacheKey">false</stringProp>
          <stringProp name="script">import com.mongodb.MongoClient;
import com.mongodb.MongoClientURI;
import com.mongodb.client.MongoDatabase;
import com.mongodb.client.model.Filters;
import org.bson.Document;
import com.mongodb.client.MongoCollection;

try{
//建立连接
String DB_USERNAME = vars.get(&quot;DB_USERNAME&quot;);
String DB_PASSWORD = vars.get(&quot;DB_PASSWORD&quot;);
String DB_SERVERS = vars.get(&quot;DB_SERVERS&quot;);
String DB_DATABASE = vars.get(&quot;DB_DATABASE&quot;);
//连接服务
MongoClientURI uri = new MongoClientURI(&quot;mongodb://&quot;+DB_USERNAME+&quot;:&quot;+DB_PASSWORD+&quot;@&quot;+DB_SERVERS+&quot;/?authSource=&quot;+DB_DATABASE+&quot;&amp;authMechanism=SCRAM-SHA-1&quot;);
MongoClient client = new MongoClient(uri);
//连接数据库
MongoDatabase db = client.getDatabase(&quot;test&quot;);
//连接集合
MongoCollection&lt;Document&gt; collection = db.getCollection(&quot;zips&quot;);

//创建条件文档
Document squery = new Document(&quot;city&quot;, &quot;BABYLON&quot;);
//创建待更新文档
Document uquery = new Document(&quot;city&quot;, &quot;Test&quot;);
Document dresult = new Document(&quot;$set&quot;, uquery);
//更新所有符合条件的文档
collection.updateMany(squery,dresult);
}catch(Exception e){
log.error(e.getClass()+&quot;:&quot;+e.getMessage());
}

</stringProp>
        </JSR223Sampler>
        <hashTree/>
        <JSR223Sampler guiclass="TestBeanGUI" testclass="JSR223Sampler" testname="删除" enabled="false">
          <stringProp name="scriptLanguage">groovy</stringProp>
          <stringProp name="parameters"></stringProp>
          <stringProp name="filename"></stringProp>
          <stringProp name="cacheKey">true</stringProp>
          <stringProp name="script">import com.mongodb.BasicDBObject;
import com.mongodb.MongoClient;
import com.mongodb.MongoClientURI;
import com.mongodb.client.MongoCollection;
import com.mongodb.client.MongoDatabase;
import org.bson.Document;

//建立连接
String DB_USERNAME = vars.get(&quot;DB_USERNAME&quot;);
String DB_PASSWORD = vars.get(&quot;DB_PASSWORD&quot;);
String DB_SERVERS = vars.get(&quot;DB_SERVERS&quot;);
String DB_DATABASE = vars.get(&quot;DB_DATABASE&quot;);
//连接服务
MongoClientURI uri = new MongoClientURI(&quot;mongodb://&quot;+DB_USERNAME+&quot;:&quot;+DB_PASSWORD+&quot;@&quot;+DB_SERVERS+&quot;/?authSource=&quot;+DB_DATABASE+&quot;&amp;authMechanism=SCRAM-SHA-1&quot;);
MongoClient client = new MongoClient(uri);
//连接数据库
MongoDatabase db = client.getDatabase(&quot;test&quot;);
//连接集合
MongoCollection&lt;Document&gt; collection = db.getCollection(&quot;zips&quot;);

//创建一条文档
BasicDBObject query = new BasicDBObject(&quot;city&quot;, &quot;BABYLON&quot;);
//删除符合条件的一条文档
//collection.deleteOne(Filters.eq(query));
//删除符合条件的多条文档
collection.deleteMany(query);





            


</stringProp>
        </JSR223Sampler>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
